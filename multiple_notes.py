#4. multiple_notes.py: Работа с несколькими заметками
#Функциональность:
#Создаёт несколько заметок через ввод данных (имя, заголовок, описание, статус, дату создания, дедлайн).
#Хранит заметки в списке словарей.
#Выводит список всех заметок.

notes = []  #создание списка для последуюшего хранения заметок от пользователя
print('Добро пожаловать в "Менеджер заметок"!')
print('Вы можете добавить новую заметку:')

from datetime import datetime   #для хранения дат в Datetime, а также проверки правильности ввода
while True:    #создаем цикл для записи заметок пользователем
    name = input("Введите Ваше имя: ")
    if not name:    #проверка, чтобы не было пустого поля
        print('Вы ввели некорректные данные или оставили поле пустым. Попробуйте ещё раз!')
        print('Новая заметка: ')
        continue
    title = input("Введите заголовок заметки: ")
    if not title:   #проверка, чтобы не было пустого поля
        print('Вы ввели некорректные данные или оставили поле пустым. Попробуйте ещё раз!')
        print('Новая заметка: ')
        continue
    content = input("Введите описание заметки: ")
    if not content: #проверка, чтобы не было пустого поля
        print('Вы ввели некорректные данные или оставили поле пустым. Попробуйте ещё раз!')
        print('Новая заметка: ')
        continue
    status = input("Введите статус заметки (новая, в процессе, выполнено): ")
    if not status:  #проверка, чтобы не было пустого поля
        print('Вы ввели некорректные данные или оставили поле пустым. Попробуйте ещё раз!')
        print('Новая заметка: ')
        continue
    created_date = input("Введите дату создания (в формате ДД-ММ-ГГГГ): ")
    try:    #использование try-except для обработки ошибок при неправильном формате даты
        created_date = datetime.strptime(created_date, '%d-%m-%Y')      #переводим сразу в 'datetime.datetime'
    except ValueError:      # в случае неверного ввода сообщаем об ошибке и запускаем цикл заново
        print('Убедитесь, что вводите дату в формате день-месяц-год, например: 10-12-2024.')
        print('Пожалуйста, попробуйте еще раз!')
        continue
    issue_date = input("Введите дедлайн (в формате ДД-ММ-ГГГГ): ")
    try:  # использование try-except для обработки ошибок при неправильном формате даты
        issue_date = datetime.strptime(issue_date, '%d-%m-%Y')  # переводим сразу в 'datetime.datetime'
    except ValueError:  # в случае неверного ввода сообщаем об ошибке и запускаем цикл заново
        print('Убедитесь, что вводите дату в формате день-месяц-год, например: 10-12-2024.')
        print('Пожалуйста, попробуйте еще раз!')
        continue
    note_ = {'Имя:': name, 'Заголовок:': title, 'Описание:': content, 'Статус:': status,
             'Дата создания:': created_date.strftime("%d-%m-%Y"), 'Дедлайн:': issue_date.strftime("%d-%m-%Y")}
    # создание словаря для хранения данных, введенных пользователем
    notes.append(note_)  # сохранение списка словарей

    continue_ = input('Хотите добавить ещё одну заметку? (да/нет): ') #создание новой заметки с обработкой ошибок ввода
    if continue_ == 'да':
        print('Новая заметка: ')
    if continue_ != 'да' and continue_ != 'нет':
        print('Вы ввели некорректный ответ. Необходимо написать да или нет')
        continue_2 = input('Хотите добавить ещё одну заметку? (да/нет): ')
        if continue_2 == 'да':
            print('Новая заметка: ')
            continue
        if continue_2 == 'нет':
            break
    if continue_ == 'нет':
        break   #завершение цикла

print("Список заметок:")
for i, item in enumerate(notes, start=1):  #вывод списка словарей с нумерацией
    print(f'{i}. Имя: {item['Имя:']}')
    print(f'Заголовок: {item['Заголовок:']}')
    print(f'Описание: {item['Описание:']}')
    print(f'Статус: {item['Статус:']}')
    print(f'Дата создания: {item['Дата создания:']}')
    print(f'Дедлайн: {item['Дедлайн:']}')